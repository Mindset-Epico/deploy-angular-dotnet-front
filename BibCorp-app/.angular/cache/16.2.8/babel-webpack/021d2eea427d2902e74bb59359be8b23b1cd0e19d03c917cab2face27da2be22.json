{"ast":null,"code":"import { ReplaySubject, take, map } from 'rxjs';\nimport { Constants } from 'src/app/util';\nimport { environment } from 'src/assets/environments/environments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let LoginService = /*#__PURE__*/(() => {\n  var _class;\n  class LoginService {\n    constructor(http) {\n      this.http = http;\n      this.baseURL = environment.apiURL + \"Usuarios/\";\n      this.currentUserSource = new ReplaySubject(1);\n      this.currentUser$ = this.currentUserSource.asObservable();\n    }\n    login(model) {\n      console.log(model);\n      return this.http.post(this.baseURL + \"Login\", model).pipe(take(1), map(response => {\n        const usuario = response;\n        if (usuario) {\n          this.setCurrentUser(usuario);\n        }\n      }));\n    }\n    setCurrentUser(usuario) {\n      localStorage.setItem(Constants.LOCAL_STORAGE_NAME, JSON.stringify(usuario));\n      this.currentUserSource.next(usuario);\n    }\n    logout() {\n      localStorage.removeItem(Constants.LOCAL_STORAGE_NAME);\n      this.currentUserSource.next(null);\n      this.currentUserSource.complete();\n    }\n    userLoged(usuario) {\n      localStorage.setItem(Constants.LOCAL_STORAGE_NAME, JSON.stringify(usuario));\n      this.currentUserSource.next(usuario);\n    }\n  }\n  _class = LoginService;\n  _class.ɵfac = function LoginService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}