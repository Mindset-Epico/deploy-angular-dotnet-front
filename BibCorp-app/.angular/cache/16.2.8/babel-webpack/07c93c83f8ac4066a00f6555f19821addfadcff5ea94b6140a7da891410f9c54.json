{"ast":null,"code":"import { take } from 'rxjs';\nimport { environment } from 'src/assets/environments/environments';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EmprestimoService = /*#__PURE__*/(() => {\n  var _class;\n  class EmprestimoService {\n    constructor(http) {\n      this.http = http;\n      this.baseURL = environment.apiURL + 'Emprestimos/';\n    }\n    getEmprestimoById(id) {\n      return this.http.get(`${this.baseURL}${id}`).pipe(take(3));\n    }\n    getEmprestimosByUserName(userName) {\n      return this.http.get(`${this.baseURL}Users/${userName}`).pipe(take(3));\n    }\n    createEmprestimo(emprestimo) {\n      return this.http.post(this.baseURL, emprestimo).pipe(take(3));\n    }\n    saveEmprestimo(emprestimo) {\n      return this.http.put(`${this.baseURL}${emprestimo.id}`, emprestimo).pipe(take(3));\n    }\n    deleteEmprestimo(emprestimoId) {\n      return this.http.delete(`${this.baseURL}${emprestimoId}?emprestimo=${emprestimoId}`).pipe(take(3));\n    }\n    renovarEmprestimo(id) {\n      return this.http.patch(`${this.baseURL}${id}/Renovacao`, null).pipe(take(1));\n    }\n    alterarLocalDeColeta(emprestimoId, novoLocalColeta) {\n      return this.http.patch(`${this.baseURL}${emprestimoId}/${novoLocalColeta}/AlteraLocalDeColeta`, null).pipe(take(1));\n    }\n    getEmprestimosPendentes(statusPendentesDeAtuacao) {\n      let statusParametro = \"\";\n      let listaDeStatus = \"\";\n      let posicao = 0;\n      statusPendentesDeAtuacao.forEach(status => {\n        if (posicao == 0) {\n          statusParametro = `status=${status}`;\n        } else {\n          statusParametro = `&status=${status}`;\n        }\n        listaDeStatus += statusParametro;\n        posicao = 1;\n      });\n      return this.http.get(`${this.baseURL}Status?${listaDeStatus}`).pipe(take(3));\n    }\n    gerenciarEmprestimo(emprestimoId, gerenciamentoEmprestimo) {\n      return this.http.patch(`${this.baseURL}${emprestimoId}/GerenciamentoEmprestimo`, gerenciamentoEmprestimo).pipe(take(3));\n    }\n    getAllEmprestimos() {\n      return this.http.get(this.baseURL).pipe(take(3));\n    }\n    getEmprestimosFiltrados(filtroEmprestimo) {\n      if (filtroEmprestimo.usuarios != null) {\n        return this.http.get(`${this.baseURL}Relatorio?DataInicio=${filtroEmprestimo.dataInicio}&DataFim=${filtroEmprestimo.dataFim}${filtroEmprestimo.usuarios}`).pipe(take(3));\n      } else {\n        return this.http.get(`${this.baseURL}Relatorio?DataInicio=${filtroEmprestimo.dataInicio}&DataFim=${filtroEmprestimo.dataFim}`).pipe(take(3));\n      }\n    }\n  }\n  _class = EmprestimoService;\n  _class.ɵfac = function EmprestimoService_Factory(t) {\n    return new (t || _class)(i0.ɵɵinject(i1.HttpClient));\n  };\n  _class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: _class,\n    factory: _class.ɵfac\n  });\n  return EmprestimoService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}